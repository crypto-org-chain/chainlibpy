[tool.poetry]
authors = ["chain-dev-team <chain@crypto.org>"]
classifiers = [
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
description = "Tools for Crypto.org Chain wallet management and offline transaction signing"
exclude = ["generate_protos.sh"]
keywords = ["CRO", "blockchain", "signature", "crypto.org"]
license = "Apache-2.0"
name = "chainlibpy"
readme = "README.md"
repository = "https://github.com/crypto-org-chain/chainlibpy"
version = "3.0.0"
build = "build.py"
include = ["defi-wallet-core-rs"]

[tool.poetry.dependencies]
python = ">=3.8, <4.0"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
docformatter = "^1.4"
flake8 = "^4.0.1"
hypothesis = "^6.35.1"
isort = "^5.10.1"
mdformat = "^0.7.10"
mdformat-black = "^0.1.1"
mdformat-toc = "^0.3.0"
mypy = "^0.931"
setuptools-rust = "^1.4.1"
pre-commit = "^2.17.0"
pystarport = "^0.2.3"
pytest = "^6.2.5"
pytest-env = "^0.6.2"
requests = "^2.27.1"
toml = "^0.10.2"
tox = "^3.24.4"
types-PyYAML = "^6.0.4"
types-requests = "^2.27.8"
types-toml = "^0.10.3"

# [tool.poetry.build]
# generate-setup-file = false
# script = "build.py"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0", "setuptools>=62.4.0", "wheel", "setuptools-rust>=1.4.1"]

[tool.black]
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.hypothesis
    | _build
    | buck-out
    | build
    | dist
  )/
  | ^chainlibpy/generated/
)
'''
include = '\.pyi?$'
line-length = 99
target-version = ['py39']

[tool.isort]
extend_skip_glob = ["*/generated/*"]
profile = "black"

[tool.pytest.ini_options]
env = [
  # To avoid "Error: Cannot open an HTTP server: socket.error reported AF_UNIX path too long"
  # PYTEST_DEBUG_TEMPROOT is used by pytest default tmp_path_factory fixture
  "PYTEST_DEBUG_TEMPROOT = /tmp",
]
